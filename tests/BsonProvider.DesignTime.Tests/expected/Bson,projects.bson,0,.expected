class BsonProvider
    static member GetSamples: () -> BsonProvider+Root[]
    BsonTop.CreateList((File.Open("<RESOLUTION_FOLDER>/projects.bson", Open, Read, Read) :> Stream))

    static member ReadAll: stream:System.IO.Stream -> BsonProvider+Root[]
    BsonTop.CreateList(stream)


class BsonProvider+Root : BsonProvider.Runtime.IBsonTop
    new : id:MongoDB.Bson.ObjectId -> ordercontainer:BsonProvider+Ordercontainer -> BsonProvider+Root
    BsonRuntime.CreateDocument([| ("_id",
                                   (id :> obj))
                                  ("ordercontainer",
                                   (ordercontainer :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Root
    BsonTop.Create(bsonValue, "")

    member Id: MongoDB.Bson.ObjectId with get
    let value = BsonRuntime.TryGetPropertyUnpackedWithPath(this, "_id")
    BsonRuntime.GetNonOptionalValue(value.Path, BsonRuntime.ConvertObjectId(value.BsonOpt), value.BsonOpt)

    member Ordercontainer: BsonProvider+Ordercontainer with get
    BsonRuntime.GetPropertyPacked(this, "ordercontainer")


class BsonProvider+Ordercontainer : BsonProvider.Runtime.IBsonTop
    new : backgrounds:BsonProvider+Backgrounds -> project:BsonProvider+Background -> BsonProvider+Ordercontainer
    BsonRuntime.CreateDocument([| ("backgrounds",
                                   (backgrounds :> obj))
                                  ("project",
                                   (project :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Ordercontainer
    BsonTop.Create(bsonValue, "")

    member Backgrounds: BsonProvider+Backgrounds with get
    BsonRuntime.GetPropertyPacked(this, "backgrounds")

    member Project: BsonProvider+Background with get
    BsonRuntime.GetPropertyPacked(this, "project")


class BsonProvider+Background : BsonProvider.Runtime.IBsonTop
    new : title:BsonProvider+Title -> BsonProvider+Background
    BsonRuntime.CreateDocument([| ("title",
                                   (title :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Background
    BsonTop.Create(bsonValue, "")

    member Title: BsonProvider+Title with get
    BsonRuntime.GetPropertyPacked(this, "title")


class BsonProvider+Backgrounds : BsonProvider.Runtime.IBsonTop
    new : background:BsonProvider+Background -> BsonProvider+Backgrounds
    BsonRuntime.CreateDocument([| ("background",
                                   (background :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Backgrounds
    BsonTop.Create(bsonValue, "")

    member Background: BsonProvider+Background with get
    BsonRuntime.GetPropertyPacked(this, "background")


class BsonProvider+Title : BsonProvider.Runtime.IBsonTop
    new : text:string -> BsonProvider+Title
    BsonRuntime.CreateDocument([| ("text",
                                   (text :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Title
    BsonTop.Create(bsonValue, "")

    member Text: string with get
    let value = BsonRuntime.TryGetPropertyUnpackedWithPath(this, "text")
    BsonRuntime.GetNonOptionalValue(value.Path, BsonRuntime.ConvertString(value.BsonOpt), value.BsonOpt)


