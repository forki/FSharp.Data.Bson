class BsonProvider
    static member GetSamples: () -> BsonProvider+Root[]
    BsonTop.CreateList((File.Open("<RESOLUTION_FOLDER>/contacts.bson", Open, Read, Read) :> Stream))

    static member ReadAll: stream:System.IO.Stream -> BsonProvider+Root[]
    BsonTop.CreateList(stream)


class BsonProvider+Root : BsonProvider.Runtime.IBsonTop
    new : id:MongoDB.Bson.ObjectId -> ab:BsonProvider+Ab -> BsonProvider+Root
    BsonRuntime.CreateDocument([| ("_id",
                                   (id :> obj))
                                  ("ab",
                                   (ab :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Root
    BsonTop.Create(bsonValue, "")

    member Ab: BsonProvider+Ab with get
    BsonRuntime.GetPropertyPacked(this, "ab")

    member Id: MongoDB.Bson.ObjectId with get
    let value = BsonRuntime.TryGetPropertyUnpackedWithPath(this, "_id")
    BsonRuntime.GetNonOptionalValue(value.Path, BsonRuntime.ConvertObjectId(value.BsonOpt), value.BsonOpt)


class BsonProvider+Ab : BsonProvider.Runtime.IBsonTop
    new : persons:BsonProvider+Person[] -> BsonProvider+Ab
    BsonRuntime.CreateDocument([| ("persons",
                                   (persons :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Ab
    BsonTop.Create(bsonValue, "")

    member Persons: BsonProvider+Person[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "persons"), new Func<_,_>(id)))


class BsonProvider+Person : BsonProvider.Runtime.IBsonTop
    new : contacts:BsonProvider+Contact[] -> emails:MongoDB.Bson.BsonValue[] -> phones:MongoDB.Bson.BsonValue[] -> BsonProvider+Person
    BsonRuntime.CreateDocument([| ("contacts",
                                   (contacts :> obj))
                                  ("emails",
                                   (emails :> obj))
                                  ("phones",
                                   (phones :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Person
    BsonTop.Create(bsonValue, "")

    member Contacts: BsonProvider+Contact[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "contacts"), new Func<_,_>(id)))

    member Emails: BsonProvider.Runtime.IBsonTop[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "emails"), new Func<_,_>(id)))

    member Phones: BsonProvider.Runtime.IBsonTop[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "phones"), new Func<_,_>(id)))


class BsonProvider+Contact : BsonProvider.Runtime.IBsonTop
    new : emailCapability:string[] -> emailImEnabled:bool[] -> emails:string[] -> phones:MongoDB.Bson.BsonValue[] -> BsonProvider+Contact
    BsonRuntime.CreateDocument([| ("emailCapability",
                                   (emailCapability :> obj))
                                  ("emailIMEnabled",
                                   (emailImEnabled :> obj))
                                  ("emails",
                                   (emails :> obj))
                                  ("phones",
                                   (phones :> obj)) |])

    new : bsonValue:MongoDB.Bson.BsonValue -> BsonProvider+Contact
    BsonTop.Create(bsonValue, "")

    member EmailCapability: string[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "emailCapability"), new Func<_,_>(fun (t:IBsonTop) -> BsonRuntime.GetNonOptionalValue(t.Path(), BsonRuntime.ConvertString(Some t.BsonValue), Some t.BsonValue)))

    member EmailImEnabled: bool[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "emailIMEnabled"), new Func<_,_>(fun (t:IBsonTop) -> BsonRuntime.GetNonOptionalValue(t.Path(), BsonRuntime.ConvertBoolean(Some t.BsonValue), Some t.BsonValue)))

    member Emails: string[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "emails"), new Func<_,_>(fun (t:IBsonTop) -> BsonRuntime.GetNonOptionalValue(t.Path(), BsonRuntime.ConvertString(Some t.BsonValue), Some t.BsonValue)))

    member Phones: BsonProvider.Runtime.IBsonTop[] with get
    BsonRuntime.ConvertArray(BsonRuntime.GetPropertyPackedOrNull(this, "phones"), new Func<_,_>(id)))


